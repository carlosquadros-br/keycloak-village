{"ast":null,"code":"import { environment } from '../../environments/environment';\nexport function initializeKeycloak(keycloak) {\n  console.log(window.location.origin);\n  return () => keycloak.init({\n    config: {\n      url: environment.keycloakAuthUrl,\n      realm: 'SpringBootLogin',\n      clientId: 'web-application'\n    },\n    initOptions: {\n      onLoad: 'login-required',\n      silentCheckSsoRedirectUri: window.location.origin + 'silent-check-sso.html'\n    },\n    enableBearerInterceptor: true,\n    bearerExcludedUrls: ['/assets']\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,gCAAgC;AAE5D,OAAM,SAAUC,kBAAkB,CAACC,QAAyB;EAC1DC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EACnC,OAAO,MACLL,QAAQ,CAACM,IAAI,CAAC;IACZC,MAAM,EAAE;MACNC,GAAG,EAAEV,WAAW,CAACW,eAAe;MAChCC,KAAK,EAAE,iBAAiB;MACxBC,QAAQ,EAAE;KACX;IACDC,WAAW,EAAE;MACXC,MAAM,EAAE,gBAAgB;MACxBC,yBAAyB,EACvBX,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG;KAC5B;IACDU,uBAAuB,EAAE,IAAI;IAC7BC,kBAAkB,EAAE,CAAC,SAAS;GAC/B,CAAC;AACN","names":["environment","initializeKeycloak","keycloak","console","log","window","location","origin","init","config","url","keycloakAuthUrl","realm","clientId","initOptions","onLoad","silentCheckSsoRedirectUri","enableBearerInterceptor","bearerExcludedUrls"],"sourceRoot":"","sources":["C:\\1.2-PLAYGROUND\\docker-projects\\keycloack-village\\web-application\\src\\app\\keycloak\\initialize-keycloak.ts"],"sourcesContent":["import { environment } from '../../environments/environment';\r\nimport { KeycloakService } from 'keycloak-angular';\r\nexport function initializeKeycloak(keycloak: KeycloakService) {\r\n  console.log(window.location.origin);\r\n  return () =>\r\n    keycloak.init({\r\n      config: {\r\n        url: environment.keycloakAuthUrl,\r\n        realm: 'SpringBootLogin',\r\n        clientId: 'web-application',\r\n      },\r\n      initOptions: {\r\n        onLoad: 'login-required',\r\n        silentCheckSsoRedirectUri:\r\n          window.location.origin + 'silent-check-sso.html',\r\n      },\r\n      enableBearerInterceptor: true,\r\n      bearerExcludedUrls: ['/assets'],\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}